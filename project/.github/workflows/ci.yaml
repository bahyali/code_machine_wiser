name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9' # Or your preferred Python version

    - name: Cache Python dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-python-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-python-

    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Run Linters (Flake8, Black, Isort)
      run: |
        flake8 .
        black --check .
        isort --check-only .

    - name: Run Unit Tests
      run: pytest tests/unit

    - name: Run Integration Tests
      run: pytest tests/integration

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      run: docker build . -t llm-sql-query-system:latest

    # Optional: Add steps for OpenAPI spec validation if you have a specific tool
    # - name: Validate OpenAPI spec
    #   run: |
    #     # Command to validate your api_docs/openapi.yaml
    #     # e.g., spectral lint api_docs/openapi.yaml
    #   continue-on-error: true # Or false, depending on strictness