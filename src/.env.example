# This file lists environment variables required by the application.
# Copy this file to a new file named `.env` and fill in the values.
# Sensitive values should ONLY be stored in the .env file and NOT committed to version control.

# --- LLM Settings ---
# Required: Your OpenAI API key. Get one from https://platform.openai.com/account/api-keys
OPENAI_API_KEY=sk-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

# --- Database Settings (for the user's PostgreSQL DB) ---
# You can provide the full database connection URL using DATABASE_URL,
# or provide individual components (DB_HOST, DB_PORT, DB_NAME, DB_USER, DB_PASSWORD).
# If both DATABASE_URL and individual components are provided, DATABASE_URL takes precedence.
# The DB_PASSWORD MUST be set via environment variable for security.

# Example using individual components:
# DB_HOST=localhost
# DB_PORT=5432
# DB_NAME=mydatabase
# DB_USER=myuser
DB_PASSWORD=mypassword # REQUIRED if using individual components

# Example using a full DSN (Data Source Name):
# DATABASE_URL=postgresql://myuser:mypassword@localhost:5432/mydatabase
# Note: If DATABASE_URL is set, individual DB_* settings are ignored for connection string assembly,
# but Pydantic will still load them if present in env/config.yaml.
# Ensure the password in DATABASE_URL is also handled securely (e.g., via env var expansion if your system supports it, or just use DB_PASSWORD).
# For simplicity and security, it's recommended to use individual components and rely on DB_PASSWORD env var.

# --- General Settings ---
# Application environment (e.g., development, staging, production)
# ENVIRONMENT=development

# --- Configuration File ---
# Optional: Path to a YAML configuration file for non-sensitive settings.
# Defaults to 'config.yaml' in the project root.
# CONFIG_FILE_PATH=./config/settings.yaml